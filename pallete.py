# PASCAL Context
colours_context = [(0, 0, 0), (128, 0, 0), (0, 128, 0), (128, 128, 0), (0, 0, 128), (128, 0, 128),
                   (0, 128, 128), (128, 128, 128), (64, 0, 0), (192, 0, 0), (64, 128, 0), (192, 128, 0),
                   (64, 0, 128), (192, 0, 128), (64, 128, 128), (192, 128, 128), (0, 64, 0), (128, 64, 0),
                   (0, 192, 0), (128, 192, 0), (0, 64, 128), (128, 64, 128), (0, 192, 128), (128, 192, 128),
                   (64, 64, 0), (192, 64, 0), (64, 192, 0), (192, 192, 0), (64, 64, 128), (192, 64, 128),
                   (64, 192, 128), (192, 192, 128), (0, 0, 64), (128, 0, 64), (0, 128, 64), (128, 128, 64),
                   (0, 0, 192), (128, 0, 192), (0, 128, 192), (128, 128, 192), (64, 0, 64), (192, 0, 64),
                   (64, 128, 64), (192, 128, 64), (64, 0, 192), (192, 0, 192), (64, 128, 192), (192, 128, 192),
                   (0, 64, 64), (128, 64, 64), (0, 192, 64), (128, 192, 64), (0, 64, 192), (128, 64, 192),
                   (0, 192, 192), (128, 192, 192), (64, 64, 64), (192, 64, 64), (64, 192, 64), (192, 192, 64)]

# Cityscapes
colours_cityscapes = [(128, 64, 128), (244, 35, 231), (69, 69, 69)
                      # 0 = road, 1 = sidewalk, 2 = building
    , (102, 102, 156), (190, 153, 153), (153, 153, 153)
                      # 3 = wall, 4 = fence, 5 = pole
    , (250, 170, 29), (219, 219, 0), (106, 142, 35)
                      # 6 = traffic light, 7 = traffic sign, 8 = vegetation
    , (152, 250, 152), (69, 129, 180), (219, 19, 60)
                      # 9 = terrain, 10 = sky, 11 = person
    , (255, 0, 0), (0, 0, 142), (0, 0, 69)
                      # 12 = rider, 13 = car, 14 = truck
    , (0, 60, 100), (0, 79, 100), (0, 0, 230)
                      # 15 = bus, 16 = train, 17 = motocycle
    , (119, 10, 32)]
# 18 = bicycle

# colour map
colours_voc12 = [(0, 0, 0)
                 # 0=background
    , (128, 0, 0), (0, 128, 0), (128, 128, 0), (0, 0, 128), (128, 0, 128)
                 # 1=aeroplane, 2=bicycle, 3=bird, 4=boat, 5=bottle
    , (0, 128, 128), (128, 128, 128), (64, 0, 0), (192, 0, 0), (64, 128, 0)
                 # 6=bus, 7=car, 8=cat, 9=chair, 10=cow
    , (192, 128, 0), (64, 0, 128), (192, 0, 128), (64, 128, 128), (192, 128, 128)
                 # 11=diningtable, 12=dog, 13=horse, 14=motorbike, 15=person
    , (0, 64, 0), (128, 64, 0), (0, 192, 0), (128, 192, 0), (0, 64, 128)]
# 16=potted plant, 17=sheep, 18=sofa, 19=train, 20=tv/monitor


def gene_pascal_pallete(num_cls):
    n = num_cls
    pallete = [0] * (n * 3)
    for j in range(0, n):
        lab = j
        pallete[j * 3 + 0] = 0
        pallete[j * 3 + 1] = 0
        pallete[j * 3 + 2] = 0
        i = 0
        while lab:
            pallete[j * 3 + 0] |= (((lab >> 0) & 1) << (7 - i))
            pallete[j * 3 + 1] |= (((lab >> 1) & 1) << (7 - i))
            pallete[j * 3 + 2] |= (((lab >> 2) & 1) << (7 - i))
            i = i + 1
            lab >>= 3
    return pallete


if __name__ == '__main__':
    NUM_CLASS = 60  # 21 for VOC2012
    vocpallete = gene_pascal_pallete(NUM_CLASS)
    palletes = []
    for i in range(0, 180, 3):
        R = vocpallete[i]
        G = vocpallete[i + 1]
        B = vocpallete[i + 2]
        palletes_one = [R, G, B]
        palletes.append(tuple(palletes_one))
    print(palletes)
